image: node:10

stages:
  - build
  - test
  - deploy review
  - deploy staging
  - deploy production
  - production test

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - node_modules/

variables:
  STAGING_DOMAIN: marc-staging.surge.sh
  PRODUCTION_DOMAIN: marc-production.surge.sh

build website:
  only:
    - merge_requests
    - master
  stage: build
  script:
  - npm install
  - npm install -g gatsby-cli
  - gatsby build
  artifacts:
    paths:
      - ./public/

test artifact:
  stage: test
  only:
    - merge_requests
    - master
  image: alpine
  script:
  - grep -q "Gatsby" ./public/index.html

.test website:
  stage: test
  script:
  - npm install
  - npm install -g gatsby-cli
  - gatsby serve &
  - sleep 15
  - curl "http://localhost:9090/" | tac | tac | grep -q "Gatsby"

.review_template: &review
  stage: deploy review
  only:
    - merge_requests

deploy review:
  <<: *review
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://marc-$CI_COMMIT_REF_NAME.surge.sh
    on_stop: stop review
  script:
    - npm install --global surge
    - surge --project ./public/ --domain marc-$CI_COMMIT_REF_NAME.surge.sh

stop review:
  <<: *review
  variables:
    GIT_STRATEGU: none
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  script:
  - npm install --global surge
  - surge teardown https://marc-$CI_COMMIT_REF_NAME.surge.sh
  when: manual

.deploy_template: &deploy
  only:
    - master
  environment:
    url: http://$DOMAIN
  script:
  - npm install --global surge
  - surge --project ./public/ --domain $DOMAIN

deploy staging:
  <<: *deploy
  stage: deploy staging
  variables:
    DOMAIN: $STAGING_DOMAIN
  environment:
    name: staging

deploy production:
  <<: *deploy
  stage: deploy production
  variables:
    DOMAIN: $PRODUCTION_DOMAIN
  environment:
    name: production
  when: manual
  allow_failure: false
  
.production test:
  image: alpine
  stage: production test
  only:
    - master
  script:
  - apk add --no-cache curl
  - curl -s "http://localhost:9090/" | tac | tac | grep -q "Hi people"
